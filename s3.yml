---
- hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Create S3 bucket for application private
      s3_bucket:
        name: "{{ project_slug }}-private-files"
        state: present
        versioning: no

    - name: Create S3 bucket for application public files
      s3_bucket:
        name: "{{ project_slug }}-public-files"
        state: present
        versioning: no
        policy: >
          {
            "Version":"2012-10-17",
            "Statement":[{
              "Sid":"PublicReadGetObject",
                  "Effect":"Allow",
                "Principal": "*",
                "Action":["s3:GetObject"],
                "Resource":["arn:aws:s3:::{{ project_slug }}-public-files/*"
                ]
              }
            ]
          }

    - name: Create S3 User for Application
      iam:
        iam_type: user
        name: "{{ project_slug }}-s3-user"
        state: present
      register: s3_user

    - name: Create S3 permission for application user on public bucket
      iam_policy:
        policy_name: "{{ project_slug }}-s3-public-policy"
        iam_name: "{{ project_slug }}-s3-user"
        iam_type: user
        state: present
        region: "{{ region }}"
        policy_json: >
          {
              "Statement": [
                  {
                      "Action": [
                          "s3:ListBucket",
                          "s3:GetBucketLocation",
                          "s3:ListBucketMultipartUploads",
                          "s3:ListBucketVersions"
                      ],
                      "Effect": "Allow",
                      "Resource": [
                          "arn:aws:s3:::{{ project_slug }}-public-files"
                      ]
                  },
                  {
                      "Action": [
                          "s3:*Object*",
                          "s3:ListMultipartUploadParts",
                          "s3:AbortMultipartUpload"
                      ],
                      "Effect": "Allow",
                      "Resource": [
                          "arn:aws:s3:::{{ project_slug }}-public-files/*"
                      ]
                  }
              ],
              "Version": "2012-10-17"
          }

    - name: Set CORS on S3 bucket
      command: >
        aws s3api put-bucket-cors --bucket {{ project_slug }}-public-files  --cors-configuration '{ "CORSRules": [ { "AllowedHeaders": [ "Authorization" ], "AllowedMethods": [ "GET" ], "AllowedOrigins": [ "{{ cors_domains }}" ], "MaxAgeSeconds": 3000 } ] }'
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
        PYTHONPATH: "python3.5"

    - name: Create S3 permission for application user on private bucket
      iam_policy:
        policy_name: "{{ project_slug }}-s3-private-policy"
        iam_name: "{{ project_slug }}-s3-user"
        iam_type: user
        state: present
        region: "{{ region }}"
        policy_json: >
          {
              "Statement": [
                  {
                      "Action": [
                          "s3:ListBucket",
                          "s3:GetBucketLocation",
                          "s3:ListBucketMultipartUploads",
                          "s3:ListBucketVersions"
                      ],
                      "Effect": "Allow",
                      "Resource": [
                          "arn:aws:s3:::{{ project_slug }}-private-files"
                      ]
                  },
                  {
                      "Action": [
                          "s3:*Object*",
                          "s3:ListMultipartUploadParts",
                          "s3:AbortMultipartUpload"
                      ],
                      "Effect": "Allow",
                      "Resource": [
                          "arn:aws:s3:::{{ project_slug }}-private-files/*"
                      ]
                  }
              ],
              "Version": "2012-10-17"
          }


