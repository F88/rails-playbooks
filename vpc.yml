---
- hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: "Create {{ project_slug }} VPC"
      ec2_vpc_net:
        state: present
        name: "{{ project_slug }}-vpc"
        region: "{{ region }}"
        cidr_block: 10.0.0.0/16
        resource_tags:
          Name: "{{ project_slug }}_vpc"
      register: vpc

    - name: "Create {{ project_slug }} public subnet"
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az }}"
        cidr: 10.0.0.0/24
        resource_tags:
          Name: "{{ project_slug }}_subnet_public"
          Type: "public"
      register: subnet_public

    - name: "Create {{ project_slug }} public subnet2"
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az2 }}"
        cidr: 10.0.1.0/24
        resource_tags:
          Name: "{{ project_slug }}_subnet_public2"
          Type: "public"
      register: subnet_public2

    - name: "Create IGW"
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        state: present
      register: igw

    - name: Setup route table for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ project_slug }}_public_route"
        subnets:
          - "{{ subnet_public.subnet.id }}"
          - "{{ subnet_public2.subnet.id }}"

        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_route_table

    - name: Create  NACL for public subnets
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: "{{ project_slug }}-nacl-public"
        region: "{{ region }}"
        subnets: ["{{ project_slug }}_subnet_public", "{{ project_slug }}_subnet_public2"]

        ingress: [
            # rule no, protocol, allow/deny, cidr, icmp_code, icmp_type, port from, port to
            [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
           # [100, 'udp', 'allow', '0.0.0.0/0', null, null, 123, 123], # EB clocksync
           # [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22], # ssh
           # [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80], # http
           # [400, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443], # https
        ]
        egress: [
            [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
        ]
        state: 'present'

    - name: Create private subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az }}"
        cidr: 10.0.2.0/24
        resource_tags:
          Name: "{{ project_slug }}_subnet_private"
          Type: "private"
      register: "subnet_private"

    - name: Create private subnet2
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az2 }}"
        cidr: 10.0.3.0/24
        resource_tags:
          Name: "{{ project_slug }}_subnet_private2"
          Type: "private"
      register: "subnet_private2"

    - name: Create new NAT gateway in public subnet and allocate new EIP
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{ subnet_public.subnet.id }}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: nat_gateway

    - name: Create new NAT gateway in public subnet2 and allocate new EIP
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{ subnet_public2.subnet.id }}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: nat_gateway2

    - name: Setup route table for private subnet
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ project_slug }}_private_route"
        subnets:
          - "{{ subnet_private.subnet.id }}"

        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gateway.nat_gateway_id }}"
      register: private_route_table

    - name: Set up private subnet route table2
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ project_slug }}_private_route2"
        subnets:
          - "{{ subnet_private2.subnet.id }}"

        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gateway2.nat_gateway_id }}"
      register: private_route_table

    - name: Create  NACL for private subnets
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: "{{ project_slug }}-nacl-private"
        region: "{{ region }}"
        subnets: ["{{ project_slug }}_subnet_private", "{{ project_slug }}_subnet_private2"]

        ingress: [
            # rule no, protocol, allow/deny, cidr, icmp_code, icmp_type,
            #                                             port from, port to
            [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
        ]
        egress: [
            [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
        ]
        state: 'present'

